{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malika\\\\Desktop\\\\food-order-app\\\\src\\\\store\\\\Cartprovider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./card-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  let updatedTotalAmount;\n  let existingCartItemIndex;\n\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const exisitingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const exisitingCartItem = state.items[exisitingCartItemIndex];\n    let updatedItems;\n\n    if (exisitingCartItem) {\n      const updatedItem = { ...exisitingCartItem,\n        amount: exisitingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[exisitingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    let updatedItems;\n    exisitingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/malika/Desktop/food-order-app/src/store/Cartprovider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","updatedTotalAmount","existingCartItemIndex","type","item","price","amount","exisitingCartItemIndex","findIndex","id","exisitingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./card-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    let updatedTotalAmount;\r\n  let existingCartItemIndex;\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const exisitingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const exisitingCartItem = state.items[exisitingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (exisitingCartItem) {\r\n      const updatedItem = {\r\n        ...exisitingCartItem,\r\n        amount: exisitingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[exisitingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    let updatedItems;\r\n\r\n    exisitingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}