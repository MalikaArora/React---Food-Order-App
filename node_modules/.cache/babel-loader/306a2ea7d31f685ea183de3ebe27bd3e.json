{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malika\\\\Desktop\\\\food-order-app\\\\src\\\\store\\\\Cartprovider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"../store/card-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  let updatedTotalAmount;\n  let existingCartItemIndex;\n\n  if (action.type === \"ADD_ITEM\") {\n    updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = [...state.items];\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE_ITEM\") {\n    let updatedItems;\n    let updatedTotalAmount = state.totalAmount;\n    existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    if (existingCartItem) {\n      updatedTotalAmount = updatedTotalAmount - existingCartItem.price;\n\n      if (existingCartItem.amount === 1) {\n        updatedItems = state.items.filter(item => item.id !== action.id);\n      } else {\n        const updatedItem = { ...existingCartItem,\n          amount: existingCartItem.amount - 1\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      }\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_ITEM\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/malika/Desktop/food-order-app/src/store/Cartprovider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","updatedTotalAmount","existingCartItemIndex","type","item","price","amount","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport CartContext from \"../store/card-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  let updatedTotalAmount;\r\n  let existingCartItemIndex;\r\n\r\n  if (action.type === \"ADD_ITEM\") {\r\n    updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = [...state.items];\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n    let updatedItems;\r\n    let updatedTotalAmount = state.totalAmount;\r\n\r\n    existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n    if (existingCartItem) {\r\n      updatedTotalAmount = updatedTotalAmount - existingCartItem.price;\r\n\r\n      if (existingCartItem.amount === 1) {\r\n        updatedItems = state.items.filter((item) => item.id !== action.id);\r\n      } else {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount - 1,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      }\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD_ITEM\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE_ITEM\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}